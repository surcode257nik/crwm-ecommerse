{"ast":null,"code":"var _jsxFileName = \"/Users/surajkumar/Projects/personal/reactapp/capstone/crwm-ecommerse/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  //find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  // check if the quantity is 1, then remove that item from the cart\n\n  if (existingCartItem.quantity === 1) return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n\n  // return cartitems with matching cart item with reduced quantity\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n    ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nconst clearCartItem = (cartItems, cartItemToClear) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartopen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  total: 0\n});\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [isCartopen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  useEffect(() => {\n    const newCartTotal = cartItems.reduce((total, cartItem) => total * cartItem.quantity, 1);\n    setCartTotal(newCartTotal);\n  }, [cartItems]);\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const removeItemFromCart = cartItemToRemove => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n  const clearItemFromCart = cartItemToClear => {\n    setCartItems(clearCartItem(cartItems, cartItemToClear));\n  };\n  const value = {\n    isCartopen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems,\n    cartCount,\n    removeItemFromCart,\n    clearItemFromCart,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"2NPMi4oiKBWD0CRX5W7cobR0ixo=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","CartContext","isCartopen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","total","CartProvider","children","_s","setCartItems","setCartCount","cartTotal","setCartTotal","newCartCount","reduce","newCartTotal","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/surajkumar/Projects/personal/reactapp/capstone/crwm-ecommerse/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nconst addCartItem = (cartItems,productToAdd) =>{\n\n    const existingCartItem = cartItems.find(\n        (cartItem)=>cartItem.id === productToAdd.id\n    );\n    if(existingCartItem){\n        return cartItems.map(\n            (cartItem)=>cartItem.id === productToAdd.id\n        ? {...cartItem, quantity:cartItem.quantity+1}: cartItem);\n    }\n    return [...cartItems, { ...productToAdd, quantity : 1 }];\n};\n\nconst removeCartItem = (cartItems,cartItemToRemove) =>{\n    //find the cart item to remove\n    const existingCartItem = cartItems.find(\n        (cartItem)=>cartItem.id === cartItemToRemove.id\n    );\n\n    // check if the quantity is 1, then remove that item from the cart\n\nif(existingCartItem.quantity===1)\n    return cartItems.filter((cartItem)=> cartItem.id!==cartItemToRemove.id);\n\n    // return cartitems with matching cart item with reduced quantity\n    return cartItems.map(\n        (cartItem)=>cartItem.id === cartItemToRemove.id\n    ? {...cartItem, quantity:cartItem.quantity-1}: cartItem);\n};\n\nconst clearCartItem = (cartItems,cartItemToClear)=> {\n    return cartItems.filter((cartItem)=> cartItem.id!==cartItemToClear.id);\n}\n\n\nexport const CartContext = createContext({\n    isCartopen : false,\n    setIsCartOpen : ()=>{},\n    cartItems: [],\n    addItemToCart : ()=>{},\n    removeItemFromCart:()=>{},\n    clearItemFromCart:()=>{},\n    cartCount:0,\n    total:0\n});\n\nexport const CartProvider = ({children}) => { \n\n    const [isCartopen, setIsCartOpen] = useState(false);\n    const [cartItems, setCartItems]= useState([]);\n    const [cartCount, setCartCount] = useState(0);\n    const [cartTotal, setCartTotal] = useState(0);\n\n    useEffect(()=>{\n        const newCartCount= cartItems.reduce((total,cartItem)=> total+cartItem.quantity ,0);\n        setCartCount(newCartCount);\n    },[cartItems])\n\n    useEffect(()=>{\n        const newCartTotal= cartItems.reduce((total,cartItem)=> total*cartItem.quantity ,1);\n        setCartTotal(newCartTotal);\n    },[cartItems])\n\n    const addItemToCart = (productToAdd) => {\n        setCartItems(addCartItem(cartItems,productToAdd));\n    }\n\n    const removeItemFromCart = (cartItemToRemove) => {\n        setCartItems(removeCartItem(cartItems,cartItemToRemove));\n    }\n\n    const clearItemFromCart = (cartItemToClear) => {\n        setCartItems(clearCartItem(cartItems,cartItemToClear));\n    }\n\n    const value = {\n        isCartopen,\n        setIsCartOpen, \n        addItemToCart, \n        cartItems, \n        cartCount, \n        removeItemFromCart,\n        clearItemFromCart,\n        cartTotal\n    };\n\n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}